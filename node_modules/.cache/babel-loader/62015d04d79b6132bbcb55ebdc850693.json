{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useContext } from \"react\";\nimport { AppContext } from \"../utils/context\";\nimport { fakeFetch } from \"../utils/fetch\";\nimport { useWrappedRequest } from \"./useWrappedRequest\";\nexport function useCustomFetch() {\n  _s();\n\n  const {\n    cache\n  } = useContext(AppContext);\n  const {\n    loading,\n    wrappedRequest\n  } = useWrappedRequest();\n  const fetchWithCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const cacheKey = getCacheKey(endpoint, params);\n    const cacheResponse = cache === null || cache === void 0 ? void 0 : cache.current.get(cacheKey);\n\n    if (cacheResponse) {\n      const data = JSON.parse(cacheResponse);\n      return data;\n    }\n\n    const result = await fakeFetch(endpoint, params);\n    cache === null || cache === void 0 ? void 0 : cache.current.set(cacheKey, JSON.stringify(result));\n    return result;\n  }), [cache, wrappedRequest]);\n  const fetchWithoutCache = useCallback(async (endpoint, params) => wrappedRequest(async () => {\n    const result = await fakeFetch(endpoint, params);\n    return result;\n  }), [wrappedRequest]);\n  const clearCache = useCallback(() => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    cache.current = new Map();\n  }, [cache]);\n  const clearCacheByEndpoint = useCallback(endpointsToClear => {\n    if ((cache === null || cache === void 0 ? void 0 : cache.current) === undefined) {\n      return;\n    }\n\n    const cacheKeys = Array.from(cache.current.keys());\n\n    for (const key of cacheKeys) {\n      const clearKey = endpointsToClear.some(endpoint => key.startsWith(endpoint));\n\n      if (clearKey) {\n        cache.current.delete(key);\n      }\n    }\n  }, [cache]);\n  return {\n    fetchWithCache,\n    fetchWithoutCache,\n    clearCache,\n    clearCacheByEndpoint,\n    loading\n  };\n}\n\n_s(useCustomFetch, \"j/MJvgyGdTYdw5q/fTHvRz37Zrc=\", false, function () {\n  return [useWrappedRequest];\n});\n\nfunction getCacheKey(endpoint, params) {\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`;\n}","map":{"version":3,"names":["useCallback","useContext","AppContext","fakeFetch","useWrappedRequest","useCustomFetch","cache","loading","wrappedRequest","fetchWithCache","endpoint","params","cacheKey","getCacheKey","cacheResponse","current","get","data","JSON","parse","result","set","stringify","fetchWithoutCache","clearCache","undefined","Map","clearCacheByEndpoint","endpointsToClear","cacheKeys","Array","from","keys","key","clearKey","some","startsWith","delete"],"sources":["C:/Users/seren/Downloads/ramp-fe-challenged/ramp-fe-challenge/src/hooks/useCustomFetch.ts"],"sourcesContent":["import { useCallback, useContext } from \"react\"\r\nimport { AppContext } from \"../utils/context\"\r\nimport { fakeFetch, RegisteredEndpoints } from \"../utils/fetch\"\r\nimport { useWrappedRequest } from \"./useWrappedRequest\"\r\n\r\nexport function useCustomFetch() {\r\n  const { cache } = useContext(AppContext)\r\n  const { loading, wrappedRequest } = useWrappedRequest()\r\n\r\n  const fetchWithCache = useCallback(\r\n    async <TData, TParams extends object = object>(\r\n      endpoint: RegisteredEndpoints,\r\n      params?: TParams\r\n    ): Promise<TData | null> =>\r\n      wrappedRequest<TData>(async () => {\r\n        const cacheKey = getCacheKey(endpoint, params)\r\n        const cacheResponse = cache?.current.get(cacheKey)\r\n\r\n        if (cacheResponse) {\r\n          const data = JSON.parse(cacheResponse)\r\n          return data as Promise<TData>\r\n        }\r\n\r\n        const result = await fakeFetch<TData>(endpoint, params)\r\n        cache?.current.set(cacheKey, JSON.stringify(result))\r\n        return result\r\n      }),\r\n    [cache, wrappedRequest]\r\n  )\r\n\r\n  const fetchWithoutCache = useCallback(\r\n    async <TData, TParams extends object = object>(\r\n      endpoint: RegisteredEndpoints,\r\n      params?: TParams\r\n    ): Promise<TData | null> =>\r\n      wrappedRequest<TData>(async () => {\r\n        const result = await fakeFetch<TData>(endpoint, params)\r\n        return result\r\n      }),\r\n    [wrappedRequest]\r\n  )\r\n\r\n  const clearCache = useCallback(() => {\r\n    if (cache?.current === undefined) {\r\n      return\r\n    }\r\n\r\n    cache.current = new Map<string, string>()\r\n  }, [cache])\r\n\r\n  const clearCacheByEndpoint = useCallback(\r\n    (endpointsToClear: RegisteredEndpoints[]) => {\r\n      if (cache?.current === undefined) {\r\n        return\r\n      }\r\n\r\n      const cacheKeys = Array.from(cache.current.keys())\r\n\r\n      for (const key of cacheKeys) {\r\n        const clearKey = endpointsToClear.some((endpoint) => key.startsWith(endpoint))\r\n\r\n        if (clearKey) {\r\n          cache.current.delete(key)\r\n        }\r\n      }\r\n    },\r\n    [cache]\r\n  )\r\n\r\n  return { fetchWithCache, fetchWithoutCache, clearCache, clearCacheByEndpoint, loading }\r\n}\r\n\r\nfunction getCacheKey(endpoint: RegisteredEndpoints, params?: object) {\r\n  return `${endpoint}${params ? `@${JSON.stringify(params)}` : \"\"}`\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}